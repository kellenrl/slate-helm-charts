apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deploy-image.fullname" . }}
  labels:
    {{- include "deploy-image.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "deploy-image.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.images.localLookup }}
        alpha.image.policy.openshift.io/resolve-names: '*'
      {{- end }}
      labels:
        {{- include "deploy-image.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.images.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "deploy-image.fullname" . }}
      {{- if .Values.writableVolumes }}
      initContainers:
        - name: make-writable-area
          image: "{{ .Values.image }}"
          command: 
            - sh
            - -c
            {{- $l := last .Values.writableVolumes }}
            - {{ range .Values.writableVolumes }}if [ -d {{.}} ]; then echo Copying {{.}} && cp -aT {{ . }} /tmp{{ . }} || /bin/true ; fi {{ if not (eq $l .) }} ; {{ end }}{{ end }}
          volumeMounts:
          {{- range $index, $element := .Values.writableVolumes }}
            - name: emptydir-vol-{{ $index }}
              mountPath: /tmp{{ $element }}
          {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image }}"
          {{- if .Values.images.command }}
          command: 
            - {{ .Values.images.command | quote }}
          {{- end }}
          {{- if .Values.images.args }}
          args:
          {{- range .Values.images.args }}
            - {{ .  | quote }}
          {{- end }}
          {{- end }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range .Values.env }}
            - name: {{ (split "=" .)._0 | quote }}
              value: {{ (split "=" .)._1 | quote }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          volumeMounts:
          {{- range $index, $element := .Values.writableVolumes }}
            - name: emptydir-vol-{{ $index }}
              mountPath: {{ $element }}
          {{- end }}
          {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath | quote }}
          {{- end }}
      volumes:
      {{- range $index, $element := .Values.writableVolumes }}
        - name: emptydir-vol-{{ $index }}
          emptyDir: {}
      {{- end }}
      {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "deploy-image.fullname" . }}
      {{- end }}
